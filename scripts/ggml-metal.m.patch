--- ggml-metal-orig.m	2023-07-25 08:38:51
+++ ggml-metal.m	2023-07-25 08:34:40
@@ -194,13 +194,13 @@
 #undef GGML_METAL_ADD_KERNEL
     }
 
-    fprintf(stderr, "%s: recommendedMaxWorkingSetSize = %8.2f MB\n", __func__, ctx->device.recommendedMaxWorkingSetSize / 1024.0 / 1024.0);
+//    fprintf(stderr, "%s: recommendedMaxWorkingSetSize = %8.2f MB\n", __func__, ctx->device.recommendedMaxWorkingSetSize / 1024.0 / 1024.0);
     fprintf(stderr, "%s: hasUnifiedMemory             = %s\n",       __func__, ctx->device.hasUnifiedMemory ? "true" : "false");
-    if (ctx->device.maxTransferRate != 0) {
-        fprintf(stderr, "%s: maxTransferRate              = %8.2f MB/s\n", __func__, ctx->device.maxTransferRate / 1024.0 / 1024.0);
-    } else {
-        fprintf(stderr, "%s: maxTransferRate              = built-in GPU\n", __func__);
-    }
+//    if (ctx->device.maxTransferRate != 0) {
+//        fprintf(stderr, "%s: maxTransferRate              = %8.2f MB/s\n", __func__, ctx->device.maxTransferRate / 1024.0 / 1024.0);
+//    } else {
+//        fprintf(stderr, "%s: maxTransferRate              = built-in GPU\n", __func__);
+//    }
 
     return ctx;
 }
@@ -319,15 +319,15 @@
             }
         }
 
-        fprintf(stderr, ", (%8.2f / %8.2f)",
-                ctx->device.currentAllocatedSize / 1024.0 / 1024.0,
-                ctx->device.recommendedMaxWorkingSetSize / 1024.0 / 1024.0);
+//        fprintf(stderr, ", (%8.2f / %8.2f)",
+//                ctx->device.currentAllocatedSize / 1024.0 / 1024.0,
+//                ctx->device.recommendedMaxWorkingSetSize / 1024.0 / 1024.0);
 
-        if (ctx->device.currentAllocatedSize > ctx->device.recommendedMaxWorkingSetSize) {
-            fprintf(stderr, ", warning: current allocated size is greater than the recommended max working set size\n");
-        } else {
-            fprintf(stderr, "\n");
-        }
+//        if (ctx->device.currentAllocatedSize > ctx->device.recommendedMaxWorkingSetSize) {
+//            fprintf(stderr, ", warning: current allocated size is greater than the recommended max working set size\n");
+//        } else {
+//            fprintf(stderr, "\n");
+//        }
     }
 
     return true;
